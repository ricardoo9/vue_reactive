{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/dep.js","../src/observer/index.js","../src/observer/watcher.js","../src/index.js"],"sourcesContent":["/**\n * 判断是否是对象：类型是object，且不能为 null\n * @param {*} val \n * @returns \n */\nexport function isObject(val) {\n  return typeof val == 'object' && val !== null\n}\n\n/**\n * 判断是否是数组\n * @param {*} val \n * @returns \n */\nexport function isArray(val) {\n  return Array.isArray(val)\n}","const arrayPrototype = Array.prototype // 缓存真实原型\n\n// 需要处理的方法\nconst reactiveMethods = [\n  'push',\n  'pop',\n  'unshift',\n  'shift',\n  'splice',\n  'reverse',\n  'sort'\n]\n\n// 增加代理原型 arrayMethods.__proto__ === arrayProrotype\n// 然后将arrayMethods继承自数组原型\n// 这里是面向切片编程思想（AOP）--不破坏封装的前提下，动态的扩展功能\nexport const arrayMethods = Object.create(arrayPrototype)\n\n// 定义响应式方法\nreactiveMethods.forEach((method) => {\n  const originalMethod = arrayPrototype[method]\n  // 在代理原型上定义重写后的响应式方法\n  Object.defineProperty(arrayMethods, method, {\n    value: function reactiveMethod(...args) {\n      const result = originalMethod.apply(this, args) // 执行默认原型的方法\n      // ...派发更新...\n      console.log('监听数组方法')\n       // this代表的就是数据本身 比如数据是{a:[1,2,3]} 那么我们使用a.push(4)  this就是a  ob就是a.__ob__ 这个属性就是上段代码增加的 代表的是该数据已经被响应式观察过了指向Observer实例\n      const ob = this.__ob__;\n\n      // 这里的标志就是代表数组有新增操作\n      let inserted;\n      switch (method) {\n        case \"push\":\n        case \"unshift\":\n          inserted = args;\n          break;\n        case \"splice\":\n          inserted = args.slice(2);\n        default:\n          break;\n      }\n      // 如果有新增的元素 inserted是一个数组 调用Observer实例的observeArray对数组每一项进行观测\n      if (inserted) ob.observeArray(inserted);\n      // 之后咱们还可以在这里检测到数组改变了之后从而触发视图更新的操作--后续源码会揭晓\n      return result\n    },\n    enumerable: false,\n    writable: true,\n    configurable: true  \n  })\n})\n","let uid = 0\n\nexport default class Dep {\n  constructor () {\n    console.log('dep类的构造器')\n    this.id = uid++\n    this.subs = []\n  }\n\n  addSub (sub) {\n    this.subs.push(sub)\n    console.log('subs', this.subs)\n  }\n\n  depend () {\n    console.log(Dep.target)\n    if (Dep.target) {\n      console.log('添加订阅者')\n      this.addSub(Dep.target)\n    }\n  }\n\n  notify (newValue) {\n    const subs = this.subs.slice()\n    console.log('dep通知更新', subs)\n    for (let i = 0, l = subs.length; i < l; i++) {\n      console.log('通知更新的watcher' ,subs)\n      subs[i].update(newValue)\n    }\n  }\n}","import { isObject, isArray } from \"../utils.js\";\nimport { arrayMethods } from \"./array.js\";\nimport Dep from \"./dep.js\";\n\nexport function observe(value) {\n  // 1，如果 value 不是对象，说明写错了，就不需要观测了，直接 return\n  // 注意：数据也是 Object，这里就不做容错判断了，忽略使用错误传入数组的情况\n  if (!isObject(value)) {\n    return;\n  }\n\n  // 通过__ob__属性判断对象是否已经被观测，如果已经被观测，就不再重复观测了；\n  if (value.__ob__) {\n    return;\n  }\n  // 2，对 对象 进行观测（最外层必须是一个object!不能是数组,Vue没有这种用法）\n  return new Observer(value);\n}\n\nclass Observer {\n  constructor(value) {\n    console.log('observer构造器执行', value);\n    // value：为数组或对象添加自定义属性__ob__ = this，\n    // this：为当前 Observer 类的实例，实例上就有 observeArray 方法；\n    // value.__ob__ = this;\t// 可被遍历枚举，会造成死循环\n    // 定义__ob__ 属性为不可被枚举，防止对象在进入walk都继续defineProperty，造成死循环\n    this.dep = new Dep(); // <=========\n    Object.defineProperty(value, '__ob__', {\n      value: this,\n      enumerable: false  // 不可被枚举\n    });\n\n\n    this.value = value\n    // 对 value 是数组和对象的情况分开处理\n    if (isArray(value)) {\n      value.__proto__ = arrayMethods;  // 更改数组的原型方法\n      console.log(value)\n      this.observeArray(value);\t// 数组的深层观测处理\n    } else {\n      // 如果value是对象，就循环对象，将对象中的属性使用Object.defineProperty重新定义一遍\n      this.walk(value); // 上来就走一步，这个方法的核心就是在循环对象\n    }\n  }\n\n  /**\n   * 遍历对象\n   *  循环data对象（不需要循环data原型上的方法），使用 Object.keys()\n   * @param {*} data \n   */\n  walk(data) {\n    Object.keys(data).forEach(key => {\n      // 使用Object.defineProperty重新定义data对象中的属性\n      defineReactive(data, key, data[key]);\n    });\n  }\n  /**\n   * 遍历数组，对数组中的对象进行递归观测\n   *  1）[[]] 数组套数组\n   *  2）[{}] 数组套对象\n   * @param {*} data \n   */\n  observeArray(data) {\n    // observe方法内，如果是对象类型，继续 new Observer 进行递归处理\n    data.forEach(item => observe(item))\n  }\n}\n\n/**\n * 给对象Obj，定义属性key，值为value\n *  使用Object.defineProperty重新定义data对象中的属性\n *  由于Object.defineProperty性能低，所以vue2的性能瓶颈也在这里\n * @param {*} obj 需要定义属性的对象\n * @param {*} key 给对象定义的属性名\n * @param {*} value 给对象定义的属性值\n */\nfunction defineReactive(obj, key, value) {\n  // childOb 是数据组进行观测后返回的结果，内部 new Observe 只处理数组或对象类型\n  // 递归实现深层观测\n  let childOb = observe(value);\n  const dep = new Dep() // <====\n  Object.defineProperty(obj, key, {\n    // 可以被枚举\n    enumerable: true,\n    // 可以被配置\n    configurable: true,\n    // get方法构成闭包：取obj属性时需返回原值value，\n    // value会查找上层作用域的value，所以defineReactive函数不能被释放销毁\n    get() {\n      console.log('访问', key, '属性');\n      dep.depend();\n      return value;\n    },\n    // 确保新对象为响应式数据：如果新设置的值为对象，需要再次进行劫持\n    set(newValue) {\n      console.log(\"修改了被观测属性 key = \" + key + \", newValue = \" + JSON.stringify(newValue))\n      if (newValue === value) return\n      // observe方法：如果是对象，会 new Observer 深层观测\n      observe(newValue);\n      value = newValue;\n      dep.notify(newValue);\n    }\n  })\n}\n","import Dep from \"./dep.js\";\n\nvar uid = 0;\nexport default class Watcher {\n  constructor(vm, exp, cb) {\n    this.exp = exp;\n    this.cb = cb;\n    this.vm = vm;\n    this.value = null;\n    this.uid = uid++;\n    this.getter = parseExpression(exp);\n    //初始化时，触发添加到监听队列\n    console.log(parseExpression(exp), 'parseExpression')\n    this.value = this.get();\n  }\n  get () {\n    Dep.target = this;\n    console.log(Dep.target, 'Dep.target')\n    /*\n    this.getter是parseExpression根据exp生成的差不多这样的一个函数\n    function anonymous(scope) {\n        return  scope.b.c+1+scope.message;\n    }\n\n    这里的访问会逐级触发get，有两个作用\n    1.在Watcher初始化时调用get，会逐级将自己添加到对象的监听列表中，如要监听a.b.c，则a、a.b、a.b.c的监听列表中都会添加这个Watcher\n     这样做的目的是，在上级数据被修改时，也能接收到通知，如a.b = {c:1}时，原c元素被覆盖，不会发出变动通知，而b则会；\n    2.同样是上述情况，新添加的c元素，需要添加监听原来c元素的Watcher到自己的监听列表中，在这个Watcher接收到b过来的通知时，会去取a.b.c的值与原值比较是否发生变动，\n     这个取的过程中，触发新的c的get，就会添加到c的监听队列\n    */\n    const obj = this.vm._data\n    var value;\n    try {\n      value = this.getter(obj)\n    } finally {\n      Dep.target = null;\n    }\n    console.log(value)\n    return value;\n  }\n  update (newVal) {\n    console.log(newVal, '修改之后的值')\n    var newVal = newVal ? newVal : this.get();\n    console.log('开始更新')\n    if(this.value != newVal){\n        console.log('执行回调')\n        this.cb && this.cb(newVal,this.value);\n        this.value = newVal;\n    }\n  }\n}\n\nfunction parseExpression(str) {\n  var seg = str.split('.')\n  return (obj) => {\n    for(let i = 0; i < seg.length; i++) {\n      if (!obj) return\n      obj = obj[seg[i]]\n    }\n    return obj\n  }\n}","import { observe } from './observer/index.js'\nimport  Watcher  from './observer/watcher.js';\n// src/index.js Vue 构造函数\nclass Vue {\n  constructor(options) {\n      console.log('Vue构造器执行')\n      this._data = options.data;\n      const vm = this;\n      vm.$options = options\n      // 响应式处理部分代码\n      observe(this._data)\n      new Watcher(vm, 'a', () => {console.log('Watcher a发生改变')}) \n      _proxy.call(this, options.data)\n  }\n}\n// 实现非侵入的数据修改\nfunction _proxy(data) {\n  const that = this;\n  Object.keys(data).forEach(key => {\n      Object.defineProperty(that, key, {\n          configurable: true,\n          enumerable: true,\n          get: function proxyGetter() {\n              return that._data[key];\n          },\n          set: function proxySetter(val) {\n              that._data[key] = val;\n          }\n      })\n  });\n}\n// 导出 Vue 函数，提供外部使用\nexport default Vue;"],"names":["isObject","val","isArray","Array","arrayPrototype","prototype","reactiveMethods","arrayMethods","Object","create","forEach","method","originalMethod","defineProperty","value","reactiveMethod","args","result","apply","console","log","ob","__ob__","inserted","slice","observeArray","enumerable","writable","configurable","uid","Dep","constructor","id","subs","addSub","sub","push","depend","target","notify","newValue","i","l","length","update","observe","Observer","dep","__proto__","walk","data","keys","key","defineReactive","item","obj","get","set","JSON","stringify","Watcher","vm","exp","cb","getter","parseExpression","_data","newVal","str","seg","split","Vue","options","$options","_proxy","call","that","proxyGetter","proxySetter"],"mappings":"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"}